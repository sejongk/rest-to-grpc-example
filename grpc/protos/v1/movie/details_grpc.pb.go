// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: protos/v1/movie/details.proto

package movie

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// MovieDetailsClient is the client API for MovieDetails service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MovieDetailsClient interface {
	GetMovieDetail(ctx context.Context, in *GetMovieDetailRequest, opts ...grpc.CallOption) (*GetMovieDetailResponse, error)
}

type movieDetailsClient struct {
	cc grpc.ClientConnInterface
}

func NewMovieDetailsClient(cc grpc.ClientConnInterface) MovieDetailsClient {
	return &movieDetailsClient{cc}
}

func (c *movieDetailsClient) GetMovieDetail(ctx context.Context, in *GetMovieDetailRequest, opts ...grpc.CallOption) (*GetMovieDetailResponse, error) {
	out := new(GetMovieDetailResponse)
	err := c.cc.Invoke(ctx, "/v1.movie.MovieDetails/GetMovieDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MovieDetailsServer is the server API for MovieDetails service.
// All implementations must embed UnimplementedMovieDetailsServer
// for forward compatibility
type MovieDetailsServer interface {
	GetMovieDetail(context.Context, *GetMovieDetailRequest) (*GetMovieDetailResponse, error)
	mustEmbedUnimplementedMovieDetailsServer()
}

// UnimplementedMovieDetailsServer must be embedded to have forward compatible implementations.
type UnimplementedMovieDetailsServer struct {
}

func (UnimplementedMovieDetailsServer) GetMovieDetail(context.Context, *GetMovieDetailRequest) (*GetMovieDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMovieDetail not implemented")
}
func (UnimplementedMovieDetailsServer) mustEmbedUnimplementedMovieDetailsServer() {}

// UnsafeMovieDetailsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MovieDetailsServer will
// result in compilation errors.
type UnsafeMovieDetailsServer interface {
	mustEmbedUnimplementedMovieDetailsServer()
}

func RegisterMovieDetailsServer(s grpc.ServiceRegistrar, srv MovieDetailsServer) {
	s.RegisterService(&MovieDetails_ServiceDesc, srv)
}

func _MovieDetails_GetMovieDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMovieDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieDetailsServer).GetMovieDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.movie.MovieDetails/GetMovieDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieDetailsServer).GetMovieDetail(ctx, req.(*GetMovieDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MovieDetails_ServiceDesc is the grpc.ServiceDesc for MovieDetails service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MovieDetails_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "v1.movie.MovieDetails",
	HandlerType: (*MovieDetailsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMovieDetail",
			Handler:    _MovieDetails_GetMovieDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/v1/movie/details.proto",
}
